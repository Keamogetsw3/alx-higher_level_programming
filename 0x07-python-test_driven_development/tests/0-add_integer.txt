the 0-add_integer.py module
=======================================================

The ''add_integer.py''module provides the `add_integer(a, b=98)` function for integer addition.

Usage of the ''add_integer'' function
===========================================================

The ''add_integer(...)'' function returns the result of adding its two arguments. It behaves like the ''+'' operator for numbers.

```python
>>> from importlib import import_module
>>> add_integer = import_module('0-add_integer').add_integer

>>> add_integer(2, 3)
5

>>> add_integer(2, -3)
-1

The function works with floating-point values
>>> add_integer(2.0, 3.0)
5

>>> add_integer(2.9, 0.2)
2

>>> add_integer(-2.9, -0.2)
-2

The function works by mixing floating and non-floating point values 
>>> add_integer(2.3, -3)
-1

>>> add_integer(2)
100

Non-Number Inputs
The function ''add_integer'' raises a TypeError if the arguments are neither an integer nor a float
>>> add_integer("hello", 3)
Traceback (most recent call last):
    TypeError: a must be an integer

>>> add_integer(2, "hello")
Traceback (most recent call last):
    TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
    TypeError: a must be an integer

>>> add_integer(2.3, None)
Traceback (most recent call last):
    TypeError: b must be an integer

If both arguments are non-integers and non-floats, a TypeError message is only displayed for the first argument
>>> add_integer("hello", "world")
Traceback (most recent call last):
    TypeError: a must be an integer

Handling Infinity and NaN
==============================
>>> add_integer(float('inf'))
Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

>>> add_integer(2, float('inf'))
Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

The function will raise an error when it encounters NaN (Not-a-Number)
>>> add_integer(float('nan'))
Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

>>> add_integer(2, float('nan'))
Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer




