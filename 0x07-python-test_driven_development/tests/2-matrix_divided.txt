# The ``2-matrix_divided`` module
=========================================

This module's ''matrix_divided(matrix, div)'' function performs matrix division. It returns a new matrix where all elements of the input matrix are divided by the given divisor `div`. The result is rounded to a maximum of two decimal places.

Using ``matrix_divided`` function
=====================================================================
To use the `matrix_divided` function, follow these examples:

```python
>>> from matrix_divider import matrix_divided
>>> matrix = [
...     [3, 6, 9],
...     [12, 15, 18]
... ]
>>> print(matrix_divided(matrix, 3))
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix = [
...     [1.1, -2.2, 3.3],
...     [4.4, 5.5, -6.6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

>>> matrix = [
...     [1, -2.2, 3, 4.4, 5],
...     [-6.6, 7.00, 8, 9.999, 10]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

Invalid Matrices
==================
The function `matrix_divided` will raise a TypeError if a list of lists doesn't contain either integers or floats
>>> matrix = "not a list"
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = None
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

An empty list will also result in a 'TypeError'
>>> matrix = []
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

However, an empty list of lists is acceptable
>>> matrix = [[]]
>>> print(matrix_divided(matrix, 3))
[[]]

If 'matrix' is not a list of lists the  'TypeError' will be raised
>>> matrix = [1, 2, 3]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

'TypeError' occurs if any elements in 'matrix' are neither integers nor floats
>>> matrix = [
...     [1, 2, 3],
...     [4, "not a number", 6]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

All the rows in matrix have the same size; otherwise, a TypeError is raised
>>> matrix = [
...     [1, 2, 3, 4],
...     [5, 6, 7]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Invalid Divisors
=================
The 'div' parameter must be either an integer or a float; otherwise, a 'TypeError' will be raised
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, "not a number"))
Traceback (most recent call last):
    TypeError: div must be a number

>>> print(matrix_divided(matrix, None))
Traceback (most recent call last):
    TypeError: div must be a number

'div' must be non-zero; otherwise, a 'ZeroDivisionError' will be raised.
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
    ZeroDivisionError: division by zero
